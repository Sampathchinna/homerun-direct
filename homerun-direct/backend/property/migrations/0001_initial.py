
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('master', '0001_initial'),
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking_code', models.CharField(max_length=100)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_telephone', models.CharField(max_length=50)),
                ('charge_type', models.CharField(max_length=50)),
                ('note', models.TextField()),
                ('no_receipt', models.BooleanField(default=False)),
                ('post_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreditAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DebitAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeeAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('refundable', models.BooleanField(default=True)),
                ('taxable', models.BooleanField(default=True)),
                ('optional', models.BooleanField(default=False)),
                ('variable', models.BooleanField(default=False)),
                ('included_in_base_rent', models.BooleanField(default=False)),
                ('calculation_type', models.IntegerField(default=0)),
                ('calculation_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('frequency', models.IntegerField(default=0)),
                ('normalized_fee_name', models.CharField(blank=True, max_length=255, null=True)),
                ('internal_use_only', models.BooleanField(default=False)),
                ('realization_type', models.IntegerField(default=0)),
                ('quantity_fee', models.BooleanField(default=False)),
                ('fee_quantity_max', models.IntegerField(blank=True, null=True)),
                ('split', models.CharField(blank=True, default='no', max_length=255, null=True)),
                ('cancellation', models.BooleanField(default=False)),
                ('occurrence_date', models.CharField(blank=True, max_length=255, null=True)),
                ('debit_account_id', models.BigIntegerField(blank=True, null=True)),
                ('credit_account_id', models.BigIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LineItemFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('total_cents', models.IntegerField(blank=True, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('taxable', models.BooleanField(default=False)),
                ('item_type', models.CharField(blank=True, max_length=255, null=True)),
                ('refundable', models.BooleanField(default=False)),
                ('optional', models.BooleanField(default=False)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('split', models.CharField(default='no', max_length=50)),
                ('cancellation', models.BooleanField(default=False)),
                ('occurrence_date', models.CharField(blank=True, max_length=255, null=True)),
                ('debit_account_id', models.BigIntegerField(blank=True, null=True)),
                ('credit_account_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_code', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card_number', models.CharField(max_length=20)),
                ('expires_on', models.CharField(max_length=10)),
                ('card_name', models.CharField(max_length=255)),
                ('zip', models.CharField(max_length=20)),
                ('method_type', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PropertyListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unit_listing_id', models.BigIntegerField()),
                ('send_update_mailer', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField(blank=True, null=True)),
                ('check_out', models.DateField(blank=True, null=True)),
                ('room_rate_cents', models.IntegerField(default=0)),
                ('fees_cents', models.IntegerField(default=0)),
                ('taxes_cents', models.IntegerField(default=0)),
                ('extras_cents', models.IntegerField(default=0)),
                ('total_cents', models.IntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('subtotal_cents', models.IntegerField(default=0)),
                ('direct_net_cents', models.IntegerField(default=0)),
                ('billable_nights', models.IntegerField(default=0)),
                ('tax_rate', models.FloatField(default=0.0)),
                ('inflation_cents', models.IntegerField(default=0)),
                ('inflation_rate', models.FloatField(default=0.0)),
                ('discount_cents', models.IntegerField(default=0)),
                ('deposit_cents', models.IntegerField(default=0)),
                ('daily_rates', models.JSONField(default=list)),
                ('booking_code', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(default='usd', max_length=10)),
                ('channel_id', models.IntegerField(blank=True, null=True)),
                ('num_guests', models.IntegerField(blank=True, null=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('usage_data', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='RateGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('subportfolio_id', models.BigIntegerField(blank=True, null=True)),
                ('portfolio_id', models.BigIntegerField(blank=True, null=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rate_groups',
            },
        ),
        migrations.CreateModel(
            name='RefundPolicies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_dot_com_refund_policy', models.CharField(max_length=50)),
                ('homeaway_refund_policy', models.CharField(max_length=50)),
                ('airbnb_refund_policy', models.CharField(max_length=50)),
                ('google_refund_policy', models.CharField(max_length=50)),
                ('refund_policy_custom', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReservationInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_range', models.JSONField()),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('paid_status_override_flag', models.CharField(max_length=50)),
                ('price_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('check_in_time', models.TimeField()),
                ('check_out_time', models.TimeField()),
                ('num_guests', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReservationNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_range', models.JSONField()),
                ('booking_type', models.CharField(max_length=50)),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('confirmed', models.BooleanField(default=False)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_telephone', models.CharField(max_length=50)),
                ('customer_addr_line_one', models.CharField(blank=True, max_length=255)),
                ('customer_addr_line_two', models.CharField(blank=True, max_length=255)),
                ('customer_city', models.CharField(blank=True, max_length=100)),
                ('customer_state', models.CharField(blank=True, max_length=100)),
                ('customer_country', models.CharField(blank=True, max_length=100)),
                ('customer_zip', models.CharField(blank=True, max_length=20)),
                ('listing_id', models.BigIntegerField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('channel_id', models.IntegerField(blank=True, null=True)),
                ('send_confirmation', models.BooleanField(default=False)),
                ('quote_id', models.BigIntegerField(blank=True, null=True)),
                ('channel_fee_payable', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('owner_will_self_clean', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('subportfolio_id', models.IntegerField(blank=True, null=True)),
                ('rate_group_id', models.IntegerField(blank=True, null=True)),
                ('portfolio_id', models.IntegerField(blank=True, null=True)),
                ('start_date', models.CharField(blank=True, max_length=255, null=True)),
                ('end_date', models.CharField(blank=True, max_length=255, null=True)),
                ('default_nightly_weekday', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('default_nightly_weekend', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_full_week', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_full_month', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(default='', max_length=255)),
                ('encrypted_password', models.CharField(default='', max_length=255)),
                ('name', models.CharField(default='', max_length=255)),
                ('avatar', models.CharField(blank=True, default='', max_length=255)),
                ('avatar_processing', models.BooleanField(default=False)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('reset_password_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('reset_password_sent_at', models.DateTimeField(blank=True, null=True)),
                ('remember_created_at', models.DateTimeField(blank=True, null=True)),
                ('sign_in_count', models.IntegerField(default=0)),
                ('current_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('current_sign_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_sign_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('uid', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('age_verified', models.BooleanField(default=False)),
                ('tag', models.IntegerField(blank=True, null=True)),
                ('adr_street', models.CharField(blank=True, max_length=255, null=True)),
                ('adr_city', models.CharField(blank=True, max_length=255, null=True)),
                ('adr_country', models.CharField(blank=True, max_length=255, null=True)),
                ('adr_state', models.CharField(blank=True, max_length=255, null=True)),
                ('adr_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_adr_street', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_adr_city', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_adr_country', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_adr_state', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_adr_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('verified', models.BooleanField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='DeductionAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('unit_listing_id', models.BigIntegerField()),
                ('calculation_type', models.IntegerField(default=0)),
                ('calculation_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('variable', models.BooleanField(default=False)),
                ('frequency', models.IntegerField(default=0)),
                ('realization_type', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('debit_account_id', models.BigIntegerField()),
                ('credit_account_id', models.BigIntegerField()),
                ('occurrence_date', models.CharField(max_length=255)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deduction_accounts', to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('google_place_id', models.CharField(blank=True, max_length=255, null=True)),
                ('custom', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Deposits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('unit_listing_id', models.IntegerField()),
                ('calculation_type', models.CharField(max_length=50)),
                ('calculation_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('refundable', models.BooleanField(default=False)),
                ('taxable', models.BooleanField(default=False)),
                ('remaining_balance_due_date', models.CharField(max_length=50)),
                ('is_security_deposit', models.BooleanField(default=False)),
                ('security_deposit_authorization', models.CharField(max_length=50)),
                ('unit_pricing_id', models.IntegerField()),
                ('auto_process_payments', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeeAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('refundable', models.BooleanField(default=False)),
                ('taxable', models.BooleanField(default=False)),
                ('optional', models.BooleanField(default=False)),
                ('variable', models.BooleanField(default=False)),
                ('included_in_base_rent', models.BooleanField(default=False)),
                ('calculation_type', models.CharField(max_length=50)),
                ('calculation_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('frequency', models.CharField(max_length=50)),
                ('normalized_fee_name', models.CharField(blank=True, max_length=100, null=True)),
                ('internal_use_only', models.BooleanField(default=False)),
                ('realization_type', models.CharField(max_length=50)),
                ('quantity_fee', models.BooleanField(default=False)),
                ('fee_quantity_max', models.IntegerField(blank=True, null=True)),
                ('split', models.CharField(max_length=50)),
                ('cancellation', models.BooleanField(default=False)),
                ('occurrence_date', models.CharField(max_length=50)),
                ('debit_account_id', models.IntegerField()),
                ('credit_account_id', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
                ('los_ranges', models.JSONField(default=list)),
                ('fee_count', models.IntegerField(default=0)),
                ('fee_image', models.URLField(blank=True, null=True)),
                ('owner_split', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_name', models.CharField(max_length=255)),
                ('cost_cents', models.IntegerField()),
                ('count', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='inventory_items', to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LineItemTax',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('property.lineitemfee',),
        ),
        migrations.CreateModel(
            name='OwnerSplit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField()),
                ('margin_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('margin_type', models.IntegerField(blank=True, null=True)),
                ('organization_id', models.BigIntegerField(blank=True, null=True)),
                ('fee_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='owner_splits', to='property.feeaccount')),
            ],
        ),
        migrations.AddField(
            model_name='lineitemfee',
            name='owner_split',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='line_items', to='property.ownersplit'),
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_connect_account_id', models.IntegerField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=False)),
                ('multi_unit', models.BooleanField(default=False)),
                ('summary_accommodations', models.TextField(blank=True, null=True)),
                ('summary_description', models.TextField(blank=True, null=True)),
                ('summary_headline', models.TextField(blank=True, null=True)),
                ('summary_rules', models.TextField(blank=True, null=True)),
                ('features_adventure', models.JSONField(default=dict)),
                ('features_attractions', models.JSONField(default=dict)),
                ('features_car', models.JSONField(default=dict)),
                ('features_leisure', models.JSONField(default=dict)),
                ('features_local', models.JSONField(default=dict)),
                ('features_location', models.JSONField(default=dict)),
                ('manager_info_visible', models.BooleanField(default=False)),
                ('registration_id', models.CharField(blank=True, max_length=100, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('extra', models.JSONField(blank=True, default=dict, null=True)),
                ('unit_code', models.CharField(blank=True, max_length=100, null=True)),
                ('features_cleaning', models.JSONField(default=dict)),
                ('summary_description_plain_text', models.TextField(blank=True, null=True)),
                ('summary_rules_plain_text', models.TextField(blank=True, null=True)),
                ('direct_ical_url', models.URLField(blank=True, null=True)),
                ('active_on_airbnb', models.BooleanField(default=False)),
                ('active_on_homeaway', models.BooleanField(default=False)),
                ('property_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.propertytype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternetOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_internet_connection', models.BooleanField(default=False)),
                ('homeaway_internet_cost', models.CharField(blank=True, max_length=100)),
                ('homeaway_internet_speed', models.CharField(blank=True, max_length=100)),
                ('wifi_username', models.CharField(blank=True, max_length=100)),
                ('wifi_password', models.CharField(blank=True, max_length=100)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImagesProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.URLField()),
                ('image_processing', models.BooleanField(default=False)),
                ('label', models.CharField(blank=True, max_length=255)),
                ('order', models.IntegerField(default=0)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GuestControls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('children', models.JSONField(default=dict)),
                ('smoking', models.JSONField(default=dict)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PropertyLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.location')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=50)),
                ('adr_street', models.CharField(max_length=255)),
                ('adr_city', models.CharField(max_length=100)),
                ('adr_state', models.CharField(max_length=100)),
                ('adr_country', models.CharField(max_length=100)),
                ('adr_zip', models.CharField(max_length=20)),
                ('billing_adr_street', models.CharField(max_length=255)),
                ('billing_adr_city', models.CharField(max_length=100)),
                ('billing_adr_country', models.CharField(max_length=100)),
                ('billing_adr_state', models.CharField(max_length=100)),
                ('billing_adr_zip', models.CharField(max_length=20)),
                ('booking_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.reservationnew')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subportfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('portfolio', models.ForeignKey(db_column='portfolio_id', on_delete=django.db.models.deletion.DO_NOTHING, to='property.portfolio')),
            ],
            options={
                'db_table': 'subportfolios',
            },
        ),
        migrations.CreateModel(
            name='TaxAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField()),
                ('tax_type', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('adj_tax', models.FloatField()),
                ('max_night_with_tax_rate', models.IntegerField()),
                ('exclude_tax', models.BooleanField(default=False)),
                ('tax_adjustable', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applies_to_room_rate', models.BooleanField(default=True)),
                ('occurrence_date', models.CharField(max_length=255)),
                ('debit_account_id', models.BigIntegerField()),
                ('credit_account_id', models.BigIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(blank=True, default='usd', max_length=10, null=True)),
                ('unit_id', models.BigIntegerField(blank=True, null=True)),
                ('tax_rate', models.FloatField(blank=True, null=True)),
                ('instant_booking', models.BooleanField(blank=True, null=True)),
                ('refund_policy', models.IntegerField(blank=True, null=True)),
                ('refund_policy_custom', models.TextField(blank=True, null=True)),
                ('featured', models.BooleanField(blank=True, null=True)),
                ('enabled_distribution_homeaway', models.BooleanField(default=False)),
                ('enabled_distribution_booking', models.BooleanField(default=False)),
                ('enabled_distribution_airbnb', models.BooleanField(default=False)),
                ('airbnb_refund_policy', models.IntegerField(blank=True, null=True)),
                ('booking_dot_com_refund_policy', models.IntegerField(blank=True, null=True)),
                ('homeaway_refund_policy', models.IntegerField(blank=True, null=True)),
                ('adj_tax', models.FloatField(default=0.0)),
                ('max_night_with_tax_rate', models.IntegerField(default=0)),
                ('exclude_tax', models.BooleanField(default=False)),
                ('tax_adjustable', models.BooleanField(default=False)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('is_multi_unit', models.BooleanField(default=False)),
                ('is_room_type', models.BooleanField(default=False)),
                ('rate_inflator', models.FloatField(blank=True, null=True)),
                ('primary', models.BooleanField(default=False)),
                ('vehicle_id', models.BigIntegerField(blank=True, null=True)),
                ('rvshare_cancellation_policy', models.IntegerField(blank=True, null=True)),
                ('google_refund_policy', models.IntegerField(blank=True, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='organization.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_code', models.CharField(blank=True, max_length=255, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(blank=True, null=True)),
                ('num_guests', models.IntegerField(blank=True, null=True)),
                ('price_breakdown', models.CharField(blank=True, max_length=255, null=True)),
                ('price_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('booking_range', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(default='[]', max_length=255)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('check_in', models.DateField(blank=True, null=True)),
                ('check_out', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('paid_status_override_flag', models.IntegerField(blank=True, null=True)),
                ('channel_id', models.IntegerField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('charges_pending', models.BooleanField(default=False)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('processing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('subtotal', models.IntegerField(blank=True, null=True)),
                ('direct_fee', models.IntegerField(blank=True, null=True)),
                ('org_total', models.IntegerField(blank=True, null=True)),
                ('stripe_fee', models.IntegerField(blank=True, null=True)),
                ('owner_total', models.IntegerField(blank=True, null=True)),
                ('stripe_transfers', models.JSONField(default=list)),
                ('creation_method', models.IntegerField(default=0)),
                ('booking_type', models.IntegerField(default=0)),
                ('generated_as_type', models.IntegerField(blank=True, null=True)),
                ('external_contract_code', models.CharField(blank=True, max_length=255, null=True)),
                ('door_code', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('channel_updatable', models.BooleanField(default=True)),
                ('homeaway_cancellation_reservation_status', models.IntegerField(blank=True, null=True)),
                ('owner_self_clean', models.BooleanField(default=False)),
                ('invalid_card_enqued', models.DateField(blank=True, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('cancellation_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('cancellation_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('bdc_cancel_code', models.IntegerField(blank=True, null=True)),
                ('airbnb_cancellation_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('connected_stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('awaiting_verification', models.BooleanField(default=False)),
                ('alteration_request', models.DateField(blank=True, null=True)),
                ('alteration_accepted', models.BooleanField(blank=True, null=True)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('check_out_time', models.DateTimeField(blank=True, null=True)),
                ('rvshare_calendar_block_id', models.CharField(blank=True, max_length=255, null=True)),
                ('balance_collection_date', models.DateField(blank=True, null=True)),
                ('generator_usage_included', models.IntegerField(blank=True, null=True)),
                ('mileage_included', models.IntegerField(blank=True, null=True)),
                ('unlimited_generator', models.BooleanField(blank=True, null=True)),
                ('rvshare_booking_cancellation_policy', models.IntegerField(blank=True, null=True)),
                ('payment_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('external_insurance_verified', models.BooleanField(default=False)),
                ('split_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.booking')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.customer')),
                ('delivery_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.deliverylocation')),
                ('quote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.quote')),
                ('unit_listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.unitlisting')),
            ],
            options={
                'db_table': 'ant_bookings',
            },
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('summary_description', models.TextField(blank=True, null=True)),
                ('summary_description_plain_text', models.TextField(blank=True, null=True)),
                ('features_accommodations', models.TextField(blank=True, null=True)),
                ('features_amenities', models.TextField(blank=True, null=True)),
                ('features_dining', models.TextField(blank=True, null=True)),
                ('features_entertainment', models.TextField(blank=True, null=True)),
                ('features_outdoor', models.TextField(blank=True, null=True)),
                ('features_spa', models.TextField(blank=True, null=True)),
                ('features_suitability', models.TextField(blank=True, null=True)),
                ('features_themes', models.TextField(blank=True, null=True)),
                ('features_safety', models.TextField(blank=True, null=True)),
                ('num_bathrooms', models.FloatField(blank=True, null=True)),
                ('num_bedrooms', models.IntegerField(blank=True, null=True)),
                ('num_lounge', models.IntegerField(blank=True, null=True)),
                ('num_sleep', models.IntegerField(blank=True, null=True)),
                ('num_sleep_in_beds', models.IntegerField(blank=True, null=True)),
                ('num_parking_space', models.IntegerField(blank=True, null=True)),
                ('unit_type', models.IntegerField(blank=True, null=True)),
                ('measurement_type', models.IntegerField(default=0)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('minimum_age', models.IntegerField(blank=True, null=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('unit_group_id', models.BigIntegerField(blank=True, null=True)),
                ('rate_group_id', models.BigIntegerField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('pointcentral_customer_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('airbnb_headline', models.CharField(blank=True, max_length=255, null=True)),
                ('bdc_headline', models.CharField(blank=True, max_length=255, null=True)),
                ('airbnb_summary', models.CharField(blank=True, max_length=255, null=True)),
                ('homeaway_internet_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('homeaway_internet_speed', models.IntegerField(blank=True, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_contact_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_contact_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guest_controls_description', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('wifi_username', models.CharField(blank=True, max_length=255, null=True)),
                ('wifi_password', models.CharField(blank=True, max_length=255, null=True)),
                ('check_in_instructions', models.JSONField(blank=True, default=dict)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('enabled_on_kaba', models.BooleanField(default=False)),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.portfolio')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
                ('subportfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.subportfolio')),
            ],
            options={
                'db_table': 'property_units',
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.units'),
        ),
        migrations.CreateModel(
            name='BedroomsBathrooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('num_of_bedrooms', models.IntegerField()),
                ('num_sleep_in_beds', models.IntegerField()),
                ('num_of_livingrooms', models.IntegerField()),
                ('num_of_bathrooms', models.IntegerField()),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.units')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bathroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bathroom_type', models.CharField(max_length=50)),
                ('amenities', models.JSONField(default=dict)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('bedrooms_bathrooms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.bedroomsbathrooms')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.units')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UsageAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_type', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('charge_type', models.IntegerField()),
                ('amount_free', models.CharField(max_length=255)),
                ('calculation_amount', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='organization.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=False)),
                ('vin_number', models.CharField(blank=True, max_length=255, null=True)),
                ('show_manager_info', models.BooleanField(default=False)),
                ('vehicle_type', models.IntegerField(blank=True, null=True)),
                ('headline', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('transmission_type', models.IntegerField(blank=True, null=True)),
                ('cruise_control', models.BooleanField(default=False)),
                ('number_of_seatbelts', models.IntegerField(blank=True, null=True)),
                ('fuel_type', models.IntegerField(blank=True, null=True)),
                ('dual_battery', models.BooleanField(default=False)),
                ('electric_service', models.IntegerField(blank=True, null=True)),
                ('fuel_consumption', models.FloatField(blank=True, null=True)),
                ('fuel_capacity', models.IntegerField(blank=True, null=True)),
                ('gross_weight', models.FloatField(blank=True, null=True)),
                ('dry_weight', models.FloatField(blank=True, null=True)),
                ('cargo_weight', models.FloatField(blank=True, null=True)),
                ('stationary', models.BooleanField(default=False)),
                ('num_sleep_in_beds', models.IntegerField(blank=True, null=True)),
                ('pets_allowed', models.BooleanField(blank=True, null=True)),
                ('smoking_allowed', models.BooleanField(blank=True, null=True)),
                ('wheelchair_accessible', models.BooleanField(blank=True, null=True)),
                ('minimum_age_to_rent', models.IntegerField(default=25)),
                ('electric_generator', models.BooleanField(default=False)),
                ('navigation', models.BooleanField(default=False)),
                ('kitchen_sink', models.BooleanField(default=False)),
                ('rear_vision_camera', models.BooleanField(default=False)),
                ('seat_belts', models.BooleanField(default=False)),
                ('hot_and_cold_water_supply', models.BooleanField(default=False)),
                ('slide_out', models.BooleanField(default=False)),
                ('cd_player', models.BooleanField(default=False)),
                ('dvd_player', models.BooleanField(default=False)),
                ('games', models.BooleanField(default=False)),
                ('satellite_cable_television', models.BooleanField(default=False)),
                ('television', models.BooleanField(default=False)),
                ('in_dash_air_conditioning', models.BooleanField(default=False)),
                ('dryer', models.BooleanField(default=False)),
                ('hair_dryer', models.BooleanField(default=False)),
                ('heating', models.BooleanField(default=False)),
                ('linens', models.BooleanField(default=False)),
                ('towels', models.BooleanField(default=False)),
                ('washer', models.BooleanField(default=False)),
                ('essentials', models.BooleanField(default=False)),
                ('dining_area', models.BooleanField(default=False)),
                ('coffee_maker', models.BooleanField(default=False)),
                ('utensils', models.BooleanField(default=False)),
                ('dishwasher', models.BooleanField(default=False)),
                ('microwave', models.BooleanField(default=False)),
                ('oven', models.BooleanField(default=False)),
                ('refrigerator', models.BooleanField(default=False)),
                ('stove', models.BooleanField(default=False)),
                ('toaster', models.BooleanField(default=False)),
                ('first_aid_kit', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('kayak_canoe', models.BooleanField(default=False)),
                ('trailer_connector_type', models.CharField(blank=True, max_length=255, null=True)),
                ('trailer_connector_adapter_provided', models.BooleanField(blank=True, null=True)),
                ('hitch_provided', models.BooleanField(blank=True, null=True)),
                ('anti_sway_device_provided', models.BooleanField(blank=True, null=True)),
                ('trailer_ball_size', models.CharField(blank=True, max_length=255, null=True)),
                ('engine', models.CharField(blank=True, max_length=255, null=True)),
                ('power_steering', models.BooleanField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('make', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('fresh_water_tank', models.FloatField(blank=True, null=True)),
                ('shower', models.BooleanField(default=False)),
                ('toilet', models.BooleanField(default=False)),
                ('bathroom_sink', models.BooleanField(default=False)),
                ('hitch_weight', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('slides', models.IntegerField(blank=True, null=True)),
                ('stated_value', models.CharField(blank=True, max_length=255, null=True)),
                ('stated_value_locked', models.BooleanField(default=False)),
                ('roof_air_conditioning', models.BooleanField(default=False)),
                ('ipod_docking_station', models.BooleanField(default=False)),
                ('am_fm_radio', models.BooleanField(default=False)),
                ('weight_distributing', models.BooleanField(blank=True, null=True)),
                ('delivery_base_fee', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_base_miles', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_overage_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_overage_mile_limit', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery', models.BooleanField(default=False)),
                ('stationary_description', models.CharField(blank=True, default='', max_length=255)),
                ('delivery_base_id', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_overage_id', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_sd_waiver', models.BooleanField(default=False)),
                ('price_details', models.CharField(blank=True, max_length=255, null=True)),
                ('description_plain_text', models.CharField(blank=True, default='', max_length=255)),
                ('mba_insurance_policy_number', models.CharField(blank=True, max_length=255, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organization.organization')),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.portfolio')),
                ('rate_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.rategroup')),
                ('subportfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.subportfolio')),
                ('unit_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.unitgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_nightly_weekday', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('default_nightly_weekend', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_full_week', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discount_full_month', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('pricing_calendar', models.JSONField(default=dict)),
                ('additional_guest_amount_cents', models.IntegerField(default=0)),
                ('additional_guest_start', models.IntegerField(default=1)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organization.organization')),
                ('unit_listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.unitlisting')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='unit_pricings', to='property.units')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='quote',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.vehicle'),
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_nightly_weekday', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('default_nightly_weekend', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_full_week', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discount_full_month', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('pricing_calendar', models.JSONField(default=dict)),
                ('additional_guest_amount_cents', models.IntegerField(default=0)),
                ('additional_guest_start', models.IntegerField(default=1)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.units')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.vehicle')),
            ],
            options={
                'db_table': 'unit_pricings',
            },
        ),
        migrations.CreateModel(
            name='LivingRooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bedroom_type', models.CharField(max_length=50)),
                ('amenities', models.JSONField(default=dict)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('bedrooms_bathrooms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.bedroomsbathrooms')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.units')),
                ('vehicle_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='deliverylocation',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.vehicle'),
        ),
        migrations.CreateModel(
            name='Bedrooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bedroom_type', models.CharField(max_length=50)),
                ('amenities', models.JSONField(default=dict)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('bedrooms_bathrooms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.bedroomsbathrooms')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.units')),
                ('vehicle_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_availability_changeover', models.CharField(blank=True, max_length=255, null=True)),
                ('default_stay_max', models.IntegerField(blank=True, null=True)),
                ('default_stay_min', models.IntegerField(blank=True, null=True)),
                ('default_time_check_in', models.CharField(default='12:00', max_length=255)),
                ('default_time_check_out', models.CharField(default='12:00', max_length=255)),
                ('default_prior_notify_min', models.IntegerField(blank=True, null=True)),
                ('availability_calendar', models.JSONField(blank=True, default=dict)),
                ('booking_calendar', models.JSONField(blank=True, null=True)),
                ('check_in_check_out_policy', models.TextField(blank=True, null=True)),
                ('preparation_time', models.IntegerField(default=0)),
                ('ical', models.CharField(blank=True, max_length=255, null=True)),
                ('max_advance_res', models.IntegerField(blank=True, null=True)),
                ('same_day_turnaround', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.units')),
                ('vehicle_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wo_type', models.IntegerField(blank=True, null=True)),
                ('wo_source', models.IntegerField(blank=True, null=True)),
                ('due_on', models.DateTimeField(blank=True, null=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('paid_on', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount_cents', models.IntegerField(blank=True, null=True)),
                ('assignee_type', models.CharField(blank=True, max_length=255, null=True)),
                ('assignee_id', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('job_type', models.CharField(blank=True, max_length=255, null=True)),
                ('requester_id', models.BigIntegerField(blank=True, null=True)),
                ('requester_type', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('task_types', models.JSONField(blank=True, default=list, null=True)),
                ('job_started_at', models.CharField(blank=True, max_length=255, null=True)),
                ('job_completed_at', models.CharField(blank=True, max_length=255, null=True)),
                ('booking', models.ForeignKey(blank=True, db_column='booking_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.booking')),
                ('property', models.ForeignKey(blank=True, db_column='property_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.property')),
                ('unit', models.ForeignKey(blank=True, db_column='unit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='property.units')),
            ],
        ),
        migrations.CreateModel(
            name='WorkReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField()),
                ('notes', models.JSONField(default=list)),
                ('base_amount_cents', models.IntegerField()),
                ('total_adjustments_cents', models.IntegerField()),
                ('total_cents', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_terms', models.IntegerField()),
                ('reporter_type', models.CharField(blank=True, max_length=255, null=True)),
                ('reporter_id', models.BigIntegerField(blank=True, null=True)),
                ('reviewer_type', models.CharField(blank=True, max_length=255, null=True)),
                ('reviewer_id', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('total_deductions_cents', models.IntegerField()),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('job_started_at', models.DateTimeField(blank=True, null=True)),
                ('job_completed_at', models.DateTimeField(blank=True, null=True)),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_reports', to='property.workorder')),
            ],
        ),
        migrations.AddIndex(
            model_name='unitlisting',
            index=models.Index(fields=['brand'], name='idx_unitlist_brand_id'),
        ),
        migrations.AddIndex(
            model_name='unitlisting',
            index=models.Index(fields=['organization_id'], name='idx_unitlist_org_id'),
        ),
        migrations.AddIndex(
            model_name='unitlisting',
            index=models.Index(fields=['unit_id'], name='idx_unitlist_unit_id'),
        ),
        migrations.AddIndex(
            model_name='unitlisting',
            index=models.Index(fields=['vehicle_id'], name='idx_unitlist_vehicle_id'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_code'], name='ant_booking_booking_13ca9f_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['channel_id'], name='ant_booking_channel_c02fbb_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['check_in'], name='ant_booking_check_i_350947_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['check_out'], name='ant_booking_check_o_f7b246_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['customer'], name='ant_booking_custome_0ddc68_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['delivery_location'], name='ant_booking_deliver_ce5ac0_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['external_id'], name='ant_booking_externa_4b7e7d_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['organization_id'], name='ant_booking_organiz_e5a309_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['quote'], name='ant_booking_quote_i_d1bf9f_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['split_booking'], name='ant_booking_split_b_8aa937_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['stripe_customer_id'], name='ant_booking_stripe__25351d_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['unit_listing'], name='ant_booking_unit_li_17c889_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['portfolio'], name='property_un_portfol_e4024a_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['subportfolio'], name='property_un_subport_cffba8_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['organization_id'], name='property_un_organiz_51c403_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['external_id'], name='property_un_externa_ec9c37_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['pointcentral_customer_id'], name='property_un_pointce_a73e93_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['property_id'], name='property_un_propert_96d745_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['rate_group_id'], name='property_un_rate_gr_91dd26_idx'),
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['unit_group_id'], name='property_un_unit_gr_0eb466_idx'),
        ),
        migrations.AddIndex(
            model_name='unitpricing',
            index=models.Index(fields=['organization'], name='property_un_organiz_de31dc_idx'),
        ),
        migrations.AddIndex(
            model_name='unitpricing',
            index=models.Index(fields=['unit'], name='property_un_unit_id_d430e8_idx'),
        ),
        migrations.AddIndex(
            model_name='unitpricing',
            index=models.Index(fields=['unit_listing'], name='property_un_unit_li_f0a282_idx'),
        ),
        migrations.AddIndex(
            model_name='unitpricing',
            index=models.Index(fields=['vehicle'], name='property_un_vehicle_4e1b54_idx'),
        ),
        migrations.AddIndex(
            model_name='quote',
            index=models.Index(fields=['channel_id'], name='property_qu_channel_ddf4d2_idx'),
        ),
        migrations.AddIndex(
            model_name='quote',
            index=models.Index(fields=['organization_id'], name='property_qu_organiz_3550ca_idx'),
        ),
        migrations.AddIndex(
            model_name='quote',
            index=models.Index(fields=['unit'], name='property_qu_unit_id_504300_idx'),
        ),
        migrations.AddIndex(
            model_name='quote',
            index=models.Index(fields=['vehicle'], name='property_qu_vehicle_5782d9_idx'),
        ),
        migrations.AddIndex(
            model_name='pricing',
            index=models.Index(fields=['organization'], name='unit_pricin_organiz_6d9b96_idx'),
        ),
        migrations.AddIndex(
            model_name='pricing',
            index=models.Index(fields=['unit'], name='unit_pricin_unit_id_265634_idx'),
        ),
        migrations.AddIndex(
            model_name='pricing',
            index=models.Index(fields=['vehicle'], name='unit_pricin_vehicle_a65acc_idx'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['assignee_type', 'assignee_id'], name='idx_wo_assignee'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['booking'], name='idx_wo_booking'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['organization_id'], name='idx_wo_org'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['property'], name='idx_wo_property'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['unit'], name='idx_wo_unit'),
        ),
        migrations.AddIndex(
            model_name='workreport',
            index=models.Index(fields=['organization_id'], name='property_wo_organiz_d1f81b_idx'),
        ),
        migrations.AddIndex(
            model_name='workreport',
            index=models.Index(fields=['reporter_type', 'reporter_id'], name='property_wo_reporte_d46568_idx'),
        ),
        migrations.AddIndex(
            model_name='workreport',
            index=models.Index(fields=['reviewer_type', 'reviewer_id'], name='property_wo_reviewe_c6c110_idx'),
        ),
        migrations.AddIndex(
            model_name='workreport',
            index=models.Index(fields=['work_order'], name='property_wo_work_or_d150cd_idx'),
        ),
    ]
